



IPSIE Working Group                                           A. Parecki
Internet-Draft                                                      Okta
Intended status: Informational                            26 August 2025
Expires: 27 February 2026


                    IPSIE SL1 OpenID Connect Profile
                 draft-openid-ipsie-sl1-profile-latest

Abstract

   TBD

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://openid.github.io/ipsie-openid-sl1/draft-openid-ipsie-
   sl1-profile.html.  Status information for this document may be found
   at https://datatracker.ietf.org/doc/draft-openid-ipsie-sl1-profile/.

   Discussion of this document takes place on the IPSIE Working Group
   mailing list (mailto:openid-specs-ipsie@lists.openid.net), which is
   archived at https://openid.net/wg/ipsie/.

   Source for this draft and an issue tracker can be found at
   https://github.com/openid/ipsie-openid-sl1.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 27 February 2026.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
     2.1.  Roles
   3.  Profile
     3.1.  Common Requirements
     3.2.  OpenID Connect
       3.2.1.  Requirements for OpenID Providers
       3.2.2.  Requirements for OpenID Relying Parties
   4.  Security Considerations
   5.  IANA Considerations
   6.  Normative References
   Appendix A.  Notices
   Appendix B.  Document History
   Acknowledgments
   Author's Address

1.  Introduction

   This specification defines how to implement OpenID Connect to meet
   IPSIE's SL1 requirements for enterprise integrations.  The profile
   establishes security and interoperability standards for federated
   authentication, allowing applications to authenticate users and
   retrieve additional user claims from the OpenID Connect UserInfo
   endpoint.

   This profile focuses specifically on authentication scenarios and
   does not cover broad API access use cases.  As a result, the use of
   refresh tokens and / or OAuth DPoP (Demonstration of Proof of
   Possession) are optional.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 RFC2119 [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.1.  Roles

   This document uses the term "Identity Provider" to refer to the
   "OpenID Provider" in [OpenID] and the "Authorization Server" in
   [RFC6749].

   This document uses the term "Application" to refer to the "Relying
   Party" in [OpenID] and the "Client" in [RFC6749].

3.  Profile

3.1.  Common Requirements

   Applications and Identity Providers MUST follow all of the
   requirements in the IPSIE Common Requirements Profile
   [OpenID.IPSIE-Common-Requirements].

3.2.  OpenID Connect

   In the following, a profile of the following technologies is defined:

   *  OpenID Connect Core 1.0 incorporating errata set 2
      [OpenID.Discovery]

   *  OpenID Connect Discovery [OpenID.Discovery]

   *  OAuth 2.0 Authorization Framework [RFC6749]

   *  Proof Key for Code Exchange (PKCE) [RFC7636]

   *  OAuth 2.0 Authorization Server Metadata [RFC8414]

   *  OAuth 2.0 Demonstrating Proof of Possession (DPoP) [RFC9449]

   *  OAuth 2.0 Authorization Server Issuer Identification [RFC9207]

3.2.1.  Requirements for OpenID Providers

   OpenID Providers:

   *  MUST distribute discovery metadata (such as the authorization
      endpoint) via the metadata document as specified in
      [OpenID.Discovery];

   *  MUST reject requests using the resource owner password credentials
      grant;

   *  MUST support public clients as defined in [RFC6749];

   *  MUST NOT expose open redirectors Section 4.11 of [RFC9700];

   *  MUST only accept its issuer identifier value (as defined in
      [RFC8414]) as a string in the aud claim received in client
      authentication assertions;

   *  MUST issue authorization codes with a maximum lifetime of 60
      seconds;

   *  MUST require clients to be preregistered, and MUST NOT support
      unauthenticated Dynamic Client Registration requests (see Note 1);

   *  MUST require clients to pre-register their redirect URIs;

   Access Tokens issued by OpenID Providers:

   *  MUST only be used by the RP to retrieve identity claims at the
      OpenID Provider;

   *  SHOULD only issue sender-constrained access tokens using DPoP
      [RFC9449];

   ID Tokens issued by OpenID Providers:

   *  MUST contain the OAuth Client ID of the RP as a single audience
      value as a string (see Note 2);

   *  MUST contain the acr claim as a string that identifies the
      Authentication Context Class that the authentication performed
      satisfied, as described in Section 2 of [OpenID];

   *  MUST contain the amr claim as an array of strings indicating
      identifiers for authentication methods used in the authentication
      from those registered in the IANA Authentication Method Reference
      Values registry, as described in Section 2 of [OpenID];

   *  MUST contain the auth_time claim to describe when end user
      authentication last occurred (see Note 4);

   *  MUST indicate the expected expiration time of the RP session in
      the session_expiry claim as a JSON integer that represents the
      Unix timestamp (seconds since epoch). (see Note 3);

   Note 1: The requirement for preregistered clients corresponds to
   Section 3.4 "Trust Agreements" of [NIST.FAL].

   Note 2: The audience value must be a single string to meet the
   audience restriction of [NIST.FAL].

   Note 3: This claim is currently being defined in the AB Connect WG.
   See the latest draft at https://openid.github.io/connect-enterprise-
   extensions/main.html.

   Note 4: This claim is required to satisfy the requirements in
   Section 4.7 of [NIST.FAL].

   For the authorization code flow, OpenID Providers:

   *  MUST require the value of response_type described in [RFC6749] to
      be code;

   *  MUST require PKCE [RFC7636] with S256 as the code challenge method
      (see Note 1 below);

   *  MUST require an exact match of a registered redirect URI as
      described in Section 2.1 of [RFC9700];

   *  MUST issue authorization codes with a maximum lifetime of 60
      seconds;

   *  MUST return an iss parameter in the authorization response
      according to [RFC9207];

   *  MUST NOT transmit authorization responses over unencrypted network
      connections, and, to this end, MUST NOT allow redirect URIs that
      use the http scheme;

   *  MUST reject an authorization code (Section 1.3.1 of [RFC6749]) if
      it has been previously used;

   *  MUST NOT use the HTTP 307 status code when redirecting a request
      that contains user credentials to avoid forwarding the credentials
      to a third party accidentally (see Section 4.12 of [RFC9700]);

   *  SHOULD use the HTTP 303 status code when redirecting the user
      agent using status codes;

   *  MUST support nonce parameter values up to 64 characters in length,
      and MAY reject nonce values longer than 64 characters.

   *  MUST support the max_age parameter with a values representing the
      maximum number of seconds allowable since the user was
      authenticated by the OP.  If the elapsed time since authentication
      is less than this value, the OP MAY choose to actively
      reauthenticate the user.  If the elapsed time since authentication
      is greater than this value, the OP MUST actively reauthenticate
      the user.

   Note 1: while both nonce and PKCE can provide protection from
   authorization code injection, nonce relies on the client (RP) to
   implement and enforce the check, and the IdP is unable to verify that
   it has been implemented correctly, and only stops the attack after
   tokens have already been issued.  Instead, PKCE is enforced by the
   IdP and stops the attack before tokens are issued.

3.2.2.  Requirements for OpenID Relying Parties

   OpenID Relying Parties:

   *  MUST support third-party initiated login as defined in Section 4
      of [OpenID];

   *  MUST use the authorization server's issuer identifier value (as
      defined in [RFC8414]) in the aud claim in client authentication
      assertions.  The issuer identifier value shall be sent as a string
      not as an item in an array;

   *  MUST NOT expose open redirectors (see Section 4.11 of [RFC9700]);

   *  MUST only use authorization server metadata (such as the
      authorization endpoint) retrieved from the metadata document as
      specified in [OpenID.Discovery] and [RFC8414];

   *  MUST ensure that the issuer URL used as the basis for retrieving
      the authorization server metadata is obtained from an
      authoritative source and using a secure channel, such that it
      cannot be modified by an attacker;

   *  MUST ensure that this issuer URL and the issuer value in the
      obtained metadata match;

   OpenID Relying Parties making resource requests to the OpenID
   Provider:

   *  MUST support sender-constrined access tokens using DPoP as
      described in [RFC9449];

   *  MUST support the server-provided nonce mechanism (as defined in
      Section 8 of [RFC9449]);

   *  MUST send access tokens in the HTTP header as described in
      Section 7.1 of [RFC9449];

   For the authorization code flow, Relying Parties:

   *  MUST use the authorization code grant described in [RFC6749];

   *  MUST use PKCE [RFC7636] with S256 as the code challenge method;

   *  MUST generate the PKCE challenge specifically for each
      authorization request and securely bind the challenge to the
      client and the user agent in which the flow was started;

   *  MUST check the iss parameter in the authorization response
      according to [RFC9207] to prevent mix-up attacks;

   *  SHOULD NOT use nonce parameter values longer than 64 characters;

   *  SHOULD use the max_age parameter in the authentication request to
      specify the maximum allowable authentication age to the OP in
      seconds.  The value of the max_age parameter MAY be determined
      based upon the business rules of the RP.

   In addition to the ID Token validation requirements described in
   Section 3.1.37 of [OpenID], Relying Parties:

   *  MUST validate that the aud claim is a single string and matches
      the OAuth Client ID of the RP;

   *  MUST set the session expiration of the session created to match
      the session_expiry claim (see Note 1);

   Note 1: This claim is currently being defined in the AB Connect WG.
   See the latest draft at https://openid.github.io/connect-enterprise-
   extensions/main.html.

4.  Security Considerations

5.  IANA Considerations

   This document has no IANA actions.

6.  Normative References

   [BCP195]   Best Current Practice 195,
              <https://www.rfc-editor.org/info/bcp195>.
              At the time of writing, this BCP comprises the following:

              Moriarty, K. and S. Farrell, "Deprecating TLS 1.0 and TLS
              1.1", BCP 195, RFC 8996, DOI 10.17487/RFC8996, March 2021,
              <https://www.rfc-editor.org/info/rfc8996>.

              Sheffer, Y., Saint-Andre, P., and T. Fossati,
              "Recommendations for Secure Use of Transport Layer
              Security (TLS) and Datagram Transport Layer Security
              (DTLS)", BCP 195, RFC 9325, DOI 10.17487/RFC9325, November
              2022, <https://www.rfc-editor.org/info/rfc9325>.

   [NIST.FAL] "NIST SP 800-63 Digital Identity Guidelines Federation
              Assurance Level (FAL)", August 2024,
              <https://pages.nist.gov/800-63-4/sp800-63c/fal/>.

   [OpenID]   Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and
              C. Mortimore, "OpenID Connect Core 1.0 incorporating
              errata set 2", December 2023,
              <https://openid.net/specs/openid-connect-core-1_0.html>.

   [OpenID.Discovery]
              Sakimura, N., Bradley, J., Jones, M., and E. Jay, "OpenID
              Connect Discovery 1.0 incorporating errata set 2",
              December 2023, <https://openid.net/specs/openid-connect-
              discovery-1_0.html>.

   [OpenID.IPSIE-Common-Requirements]
              Saxe, D. H., "IPSIE Common Requirements Profile", July
              2025, <https://deansaxe.github.io/draft-saxe-ipsie-common-
              requirements-profile/draft-saxe-ipsie-common-requirements-
              profile.html>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC6749]  Hardt, D., Ed., "The OAuth 2.0 Authorization Framework",
              RFC 6749, DOI 10.17487/RFC6749, October 2012,
              <https://www.rfc-editor.org/rfc/rfc6749>.

   [RFC6750]  Jones, M. and D. Hardt, "The OAuth 2.0 Authorization
              Framework: Bearer Token Usage", RFC 6750,
              DOI 10.17487/RFC6750, October 2012,
              <https://www.rfc-editor.org/rfc/rfc6750>.

   [RFC6797]  Hodges, J., Jackson, C., and A. Barth, "HTTP Strict
              Transport Security (HSTS)", RFC 6797,
              DOI 10.17487/RFC6797, November 2012,
              <https://www.rfc-editor.org/rfc/rfc6797>.

   [RFC7636]  Sakimura, N., Ed., Bradley, J., and N. Agarwal, "Proof Key
              for Code Exchange by OAuth Public Clients", RFC 7636,
              DOI 10.17487/RFC7636, September 2015,
              <https://www.rfc-editor.org/rfc/rfc7636>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8252]  Denniss, W. and J. Bradley, "OAuth 2.0 for Native Apps",
              BCP 212, RFC 8252, DOI 10.17487/RFC8252, October 2017,
              <https://www.rfc-editor.org/rfc/rfc8252>.

   [RFC8414]  Jones, M., Sakimura, N., and J. Bradley, "OAuth 2.0
              Authorization Server Metadata", RFC 8414,
              DOI 10.17487/RFC8414, June 2018,
              <https://www.rfc-editor.org/rfc/rfc8414>.

   [RFC8725]  Sheffer, Y., Hardt, D., and M. Jones, "JSON Web Token Best
              Current Practices", BCP 225, RFC 8725,
              DOI 10.17487/RFC8725, February 2020,
              <https://www.rfc-editor.org/rfc/rfc8725>.

   [RFC9126]  Lodderstedt, T., Campbell, B., Sakimura, N., Tonge, D.,
              and F. Skokan, "OAuth 2.0 Pushed Authorization Requests",
              RFC 9126, DOI 10.17487/RFC9126, September 2021,
              <https://www.rfc-editor.org/rfc/rfc9126>.

   [RFC9207]  Meyer zu Selhausen, K. and D. Fett, "OAuth 2.0
              Authorization Server Issuer Identification", RFC 9207,
              DOI 10.17487/RFC9207, March 2022,
              <https://www.rfc-editor.org/rfc/rfc9207>.

   [RFC9449]  Fett, D., Campbell, B., Bradley, J., Lodderstedt, T.,
              Jones, M., and D. Waite, "OAuth 2.0 Demonstrating Proof of
              Possession (DPoP)", RFC 9449, DOI 10.17487/RFC9449,
              September 2023, <https://www.rfc-editor.org/rfc/rfc9449>.

   [RFC9525]  Saint-Andre, P. and R. Salz, "Service Identity in TLS",
              RFC 9525, DOI 10.17487/RFC9525, November 2023,
              <https://www.rfc-editor.org/rfc/rfc9525>.

   [RFC9700]  Lodderstedt, T., Bradley, J., Labunets, A., and D. Fett,
              "Best Current Practice for OAuth 2.0 Security", BCP 240,
              RFC 9700, DOI 10.17487/RFC9700, January 2025,
              <https://www.rfc-editor.org/rfc/rfc9700>.

Appendix A.  Notices

   Copyright (c) 2025 The OpenID Foundation.

   The OpenID Foundation (OIDF) grants to any Contributor, developer,
   implementer, or other interested party a non-exclusive, royalty free,
   worldwide copyright license to reproduce, prepare derivative works
   from, distribute, perform and display, this Implementers Draft, Final
   Specification, or Final Specification Incorporating Errata
   Corrections solely for the purposes of (i) developing specifications,
   and (ii) implementing Implementers Drafts, Final Specifications, and
   Final Specification Incorporating Errata Corrections based on such
   documents, provided that attribution be made to the OIDF as the
   source of the material, but that such attribution does not indicate
   an endorsement by the OIDF.

   The technology described in this specification was made available
   from contributions from various sources, including members of the
   OpenID Foundation and others.  Although the OpenID Foundation has
   taken steps to help ensure that the technology is available for
   distribution, it takes no position regarding the validity or scope of
   any intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this specification or the extent to which any license under such
   rights might or might not be available; neither does it represent
   that it has made any independent effort to identify any such rights.
   The OpenID Foundation and the contributors to this specification make
   no (and hereby expressly disclaim any) warranties (express, implied,
   or otherwise), including implied warranties of merchantability, non-
   infringement, fitness for a particular purpose, or title, related to
   this specification, and the entire risk as to implementing this
   specification is assumed by the implementer.  The OpenID Intellectual
   Property Rights policy (found at openid.net) requires contributors to
   offer a patent promise not to assert certain patent claims against
   other contributors and against implementers.  OpenID invites any
   interested party to bring to its attention any copyrights, patents,
   patent applications, or other proprietary rights that may cover
   technology that may be required to practice this specification.

Appendix B.  Document History

   [[ To be removed from the final specification ]]

   -01

   *  Replaced keywords with uppercase IETF keywords

   *  Removed common requirements and referenced from the new IPSIE
      Common Requirements draft

   -00

   Initial draft

Acknowledgments

   TODO acknowledge.

Author's Address

   Aaron Parecki
   Okta
   Email: aaron@parecki.com
